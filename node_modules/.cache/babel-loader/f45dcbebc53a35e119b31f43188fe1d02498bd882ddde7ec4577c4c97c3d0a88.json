{"ast":null,"code":"var _jsxFileName = \"C:\\\\DS\\\\programming\\\\react-pizza\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Categories from \"../components/Categories\";\nimport Sort from \"../components/Sort\";\nimport PizzaBlock from \"../components/PizzaBlock\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = _ref => {\n  _s();\n  let {\n    serachValue\n  } = _ref;\n  const [items, setItems] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [categoryId, setCategoryId] = React.useState(0);\n  const [sortType, setSortType] = React.useState({\n    name: \"популярности\",\n    sortProperty: \"raiting\"\n  });\n  React.useEffect(() => {\n    setIsLoading(true);\n    const sortBy = sortType.sortProperty.replace(\"-\", \"\");\n    const order = sortType.sortProperty.includes(\"-\") ? \"asc\" : \"desc\";\n    const category = categoryId > 0 ? `category=${categoryId}` : \"\";\n    fetch(`https://63a2fd389704d18da08257f0.mockapi.io/items?${category}&sortBy=${sortBy}&order=${order}`).then(res => res.json()).then(arr => {\n      setItems(arr);\n      setIsLoading(false);\n    });\n    window.scrollTo(0, 0);\n  }, [categoryId, sortType]);\n  const pizzas = items.filter(obj => {\n    if (obj.title.includes(serachValue)) {}\n  }).map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 19\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 56\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: id => setCategoryId(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        value: sortType,\n        onChangeSort: id => setSortType(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"ibjm8sBKt3mfEQqATVxEgLSmnWs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Categories","Sort","PizzaBlock","Skeleton","Home","serachValue","items","setItems","useState","isLoading","setIsLoading","categoryId","setCategoryId","sortType","setSortType","name","sortProperty","useEffect","sortBy","replace","order","includes","category","fetch","then","res","json","arr","window","scrollTo","pizzas","filter","obj","title","map","id","skeletons","Array","_","index"],"sources":["C:/DS/programming/react-pizza/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Categories from \"../components/Categories\";\r\nimport Sort from \"../components/Sort\";\r\nimport PizzaBlock from \"../components/PizzaBlock\";\r\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\r\n\r\nconst Home = ({serachValue}) => {\r\n  const [items, setItems] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [categoryId, setCategoryId] = React.useState(0);\r\n  const [sortType, setSortType] = React.useState({\r\n    name: \"популярности\",\r\n    sortProperty: \"raiting\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    const sortBy = sortType.sortProperty.replace(\"-\", \"\");\r\n    const order = sortType.sortProperty.includes(\"-\") ? \"asc\" : \"desc\";\r\n    const category = categoryId > 0 ? `category=${categoryId}` : \"\";\r\n    \r\n    fetch(\r\n      `https://63a2fd389704d18da08257f0.mockapi.io/items?${category}&sortBy=${sortBy}&order=${order}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((arr) => {\r\n        setItems(arr);\r\n        setIsLoading(false);\r\n      });\r\n    window.scrollTo(0, 0);\r\n  }, [categoryId, sortType]);\r\n\r\n  const pizzas = items.filter((obj) => {\r\n    if(obj.title.includes(serachValue)){\r\n      \r\n    }\r\n  }).map((obj) => <PizzaBlock key={obj.id} {...obj} />);\r\n  const skeletons =[...new Array(6)].map((_, index) => <Skeleton key={index} />);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories\r\n          value={categoryId}\r\n          onChangeCategory={(id) => setCategoryId(id)}\r\n        />\r\n        <Sort value={sortType} onChangeSort={(id) => setSortType(id)} />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n      <div className=\"content__items\">\r\n        {isLoading\r\n          ? skeletons\r\n          : pizzas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}