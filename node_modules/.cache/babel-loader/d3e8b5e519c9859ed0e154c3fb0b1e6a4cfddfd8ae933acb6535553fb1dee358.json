{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { calcTotalPrice } from \"../../utils/calcTotalPrice\";\nimport { getCartFromLS } from \"../../utils/getCartFromLS\";\nconst initialState = getCartFromLS();\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n        // state.totalPrice = state.items.reduce((sum, obj) => {\n        //   return state.totalPrice - obj.price;\n        // }, 0);\n      }\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      // state.totalPrice = state.items.reduce((sum, obj) => {\n      //   return sum - obj.price * obj.count;\n      // }, 0);\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    clearItem(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItem,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","calcTotalPrice","getCartFromLS","initialState","cartSlice","name","reducers","addItem","state","action","findItem","items","find","obj","id","payload","count","push","totalPrice","minusItem","removeItem","filter","clearItem","actions","reducer"],"sources":["/Users/danielshapiro/Documents/Programming/React/react-pizza/src/redux/cart/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { calcTotalPrice } from \"../../utils/calcTotalPrice\";\r\nimport { getCartFromLS } from \"../../utils/getCartFromLS\";\r\nimport { CartItem, CartSliceState } from \"./types\";\r\n\r\nconst initialState: CartSliceState = getCartFromLS();\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem(state, action: PayloadAction<CartItem>) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n\r\n      if (findItem) {\r\n        findItem.count++;\r\n      } else {\r\n        state.items.push({\r\n          ...action.payload,\r\n          count: 1,\r\n        });\r\n      }\r\n      state.totalPrice = calcTotalPrice(state.items);\r\n    },\r\n    minusItem(state, action: PayloadAction<string>) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload);\r\n      \r\n      if (findItem) {\r\n        findItem.count--;\r\n        // state.totalPrice = state.items.reduce((sum, obj) => {\r\n        //   return state.totalPrice - obj.price;\r\n        // }, 0);\r\n      }\r\n      state.totalPrice = calcTotalPrice(state.items);\r\n    },\r\n    removeItem(state, action: PayloadAction<string>) {\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n      // state.totalPrice = state.items.reduce((sum, obj) => {\r\n      //   return sum - obj.price * obj.count;\r\n      // }, 0);\r\n      state.totalPrice = calcTotalPrice(state.items);\r\n    },\r\n    clearItem(state) {\r\n      state.items = [];\r\n      state.totalPrice = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addItem, removeItem, clearItem, minusItem } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,aAAa,QAAQ,2BAA2B;AAGzD,MAAMC,YAA4B,GAAGD,aAAa,EAAE;AAEpD,MAAME,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAK,EAAEC,MAA+B,EAAE;MAC9C,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAK,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAExE,IAAIJ,QAAQ,EAAE;QACZA,QAAQ,CAACM,KAAK,EAAE;MAClB,CAAC,MAAM;QACLR,KAAK,CAACG,KAAK,CAACM,IAAI,CAAC;UACf,GAAGR,MAAM,CAACM,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACAR,KAAK,CAACU,UAAU,GAAGjB,cAAc,CAACO,KAAK,CAACG,KAAK,CAAC;IAChD,CAAC;IACDQ,SAAS,CAACX,KAAK,EAAEC,MAA6B,EAAE;MAC9C,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAK,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAAC;MAErE,IAAIL,QAAQ,EAAE;QACZA,QAAQ,CAACM,KAAK,EAAE;QAChB;QACA;QACA;MACF;;MACAR,KAAK,CAACU,UAAU,GAAGjB,cAAc,CAACO,KAAK,CAACG,KAAK,CAAC;IAChD,CAAC;IACDS,UAAU,CAACZ,KAAK,EAAEC,MAA6B,EAAE;MAC/CD,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,CAACU,MAAM,CAAER,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAAC;MACpE;MACA;MACA;MACAP,KAAK,CAACU,UAAU,GAAGjB,cAAc,CAACO,KAAK,CAACG,KAAK,CAAC;IAChD,CAAC;IACDW,SAAS,CAACd,KAAK,EAAE;MACfA,KAAK,CAACG,KAAK,GAAG,EAAE;MAChBH,KAAK,CAACU,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,OAAO;EAAEa,UAAU;EAAEE,SAAS;EAAEH;AAAU,CAAC,GAAGf,SAAS,CAACmB,OAAO;AAE9E,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}