{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Status } from \"./types\";\n\n// type FetchPizzasArgs = Record<string, string>;//когда всё строчки\n\nexport const fetchPizzas = createAsyncThunk(\"pizza/fetchPizzasStatus\", async (params, thunkAPI) => {\n  const {\n    sortBy,\n    order,\n    category,\n    search,\n    currentPage\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://63a2fd389704d18da08257f0.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);\n  return data;\n  // if (data.length === 0) {\n  //   thunkAPI.rejectWithValue(\"Пиццы пустые\");\n  // }\n  // return thunkAPI.fulfillWithValue(data);\n});\n\nconst pizzaSlice = createSlice({\n  name: \"pizza\",\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","Status","fetchPizzas","params","thunkAPI","sortBy","order","category","search","currentPage","data","get","pizzaSlice","name","initialState","reducers","setItems","state","action","items","payload","extraReducers","builder","addCase","pending","status","LOADING","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["C:/DS/programming/react-pizza/src/redux/slices/pizza/slice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport axios from \"axios\";\r\nimport { Pizza, SearchPizzaParams, Status } from \"./types\";\r\n\r\n\r\n\r\n\r\n// type FetchPizzasArgs = Record<string, string>;//когда всё строчки\r\n\r\nexport const fetchPizzas = createAsyncThunk<Pizza[], SearchPizzaParams>(\r\n  \"pizza/fetchPizzasStatus\",\r\n  async (params, thunkAPI) => {\r\n    const { sortBy, order, category, search, currentPage } = params;\r\n    const { data } = await axios.get<Pizza[]>(\r\n      `https://63a2fd389704d18da08257f0.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`\r\n    );\r\n    return data;\r\n    // if (data.length === 0) {\r\n    //   thunkAPI.rejectWithValue(\"Пиццы пустые\");\r\n    // }\r\n    // return thunkAPI.fulfillWithValue(data);\r\n  }\r\n);\r\n\r\n\r\n\r\nconst pizzaSlice = createSlice({\r\n  name: \"pizza\",\r\n  initialState,\r\n  reducers: {\r\n    setItems(state, action: PayloadAction<Pizza[]>) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPizzas.pending, (state, action) => {\r\n      state.status = Status.LOADING;\r\n      state.items = [];\r\n    });\r\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = Status.SUCCESS;\r\n    });\r\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\r\n      state.status = Status.ERROR;\r\n      state.items = [];\r\n    });\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const { setItems } = pizzaSlice.actions;\r\n\r\nexport default pizzaSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAE/E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAmCC,MAAM,QAAQ,SAAS;;AAK1D;;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACzC,yBAAyB,EACzB,OAAOI,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAM;IAAEC,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGN,MAAM;EAC/D,MAAM;IAAEO;EAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC7B,0DAAyDF,WAAY,YAAWF,QAAS,WAAUF,MAAO,UAASC,KAAM,GAAEE,MAAO,EAAC,CACrI;EACD,OAAOE,IAAI;EACX;EACA;EACA;EACA;AACF,CAAC,CACF;;AAID,MAAME,UAAU,GAAGd,WAAW,CAAC;EAC7Be,IAAI,EAAE,OAAO;EACbC,YAAY;EACZC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAC9CD,KAAK,CAACE,KAAK,GAAGD,MAAM,CAACE,OAAO;IAC9B;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACrB,WAAW,CAACsB,OAAO,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACQ,MAAM,GAAGxB,MAAM,CAACyB,OAAO;MAC7BT,KAAK,CAACE,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFG,OAAO,CAACC,OAAO,CAACrB,WAAW,CAACyB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACE,KAAK,GAAGD,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACQ,MAAM,GAAGxB,MAAM,CAAC2B,OAAO;IAC/B,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAACrB,WAAW,CAAC2B,QAAQ,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACQ,MAAM,GAAGxB,MAAM,CAAC6B,KAAK;MAC3Bb,KAAK,CAACE,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAIF,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGJ,UAAU,CAACmB,OAAO;AAE9C,eAAenB,UAAU,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}