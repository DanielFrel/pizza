{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{fetchPizzas}from\"./asyncActions\";import{Status}from\"./types\";var initialState={items:[],status:Status.LOADING//loading|success|error\n};var pizzaSlice=createSlice({name:\"pizza\",initialState:initialState,reducers:{setItems:function setItems(state,action){state.items=action.payload;}},extraReducers:function extraReducers(builder){builder.addCase(fetchPizzas.pending,function(state,action){state.status=Status.LOADING;state.items=[];});builder.addCase(fetchPizzas.fulfilled,function(state,action){state.items=action.payload;state.status=Status.SUCCESS;});builder.addCase(fetchPizzas.rejected,function(state,action){state.status=Status.ERROR;state.items=[];});}});var setItems=pizzaSlice.actions.setItems;export{setItems};export default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","fetchPizzas","Status","initialState","items","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["C:/DS/programming/react-pizza/src/redux/pizza/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { fetchPizzas } from \"./asyncActions\";\r\nimport { Pizza, PizzaSliceState, Status } from \"./types\";\r\n\r\n\r\nconst initialState: PizzaSliceState = {\r\n    items: [],\r\n    status: Status.LOADING, //loading|success|error\r\n  };\r\n\r\nconst pizzaSlice = createSlice({\r\n  name: \"pizza\",\r\n  initialState,\r\n  reducers: {\r\n    setItems(state, action: PayloadAction<Pizza[]>) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPizzas.pending, (state, action) => {\r\n      state.status = Status.LOADING;\r\n      state.items = [];\r\n    });\r\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = Status.SUCCESS;\r\n    });\r\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\r\n      state.status = Status.ERROR;\r\n      state.items = [];\r\n    });\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const { setItems } = pizzaSlice.actions;\r\n\r\nexport default pizzaSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAC7D,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,OAAiCC,MAAM,KAAQ,SAAS,CAGxD,GAAMC,aAA6B,CAAG,CAClCC,KAAK,CAAE,EAAE,CACTC,MAAM,CAAEH,MAAM,CAACI,OAAS;AAC1B,CAAC,CAEH,GAAMC,WAAU,CAAGP,WAAW,CAAC,CAC7BQ,IAAI,CAAE,OAAO,CACbL,YAAY,CAAZA,YAAY,CACZM,QAAQ,CAAE,CACRC,QAAQ,mBAACC,KAAK,CAAEC,MAA8B,CAAE,CAC9CD,KAAK,CAACP,KAAK,CAAGQ,MAAM,CAACC,OAAO,CAC9B,CACF,CAAC,CACDC,aAAa,CAAE,uBAACC,OAAO,CAAK,CAC1BA,OAAO,CAACC,OAAO,CAACf,WAAW,CAACgB,OAAO,CAAE,SAACN,KAAK,CAAEC,MAAM,CAAK,CACtDD,KAAK,CAACN,MAAM,CAAGH,MAAM,CAACI,OAAO,CAC7BK,KAAK,CAACP,KAAK,CAAG,EAAE,CAClB,CAAC,CAAC,CACFW,OAAO,CAACC,OAAO,CAACf,WAAW,CAACiB,SAAS,CAAE,SAACP,KAAK,CAAEC,MAAM,CAAK,CACxDD,KAAK,CAACP,KAAK,CAAGQ,MAAM,CAACC,OAAO,CAC5BF,KAAK,CAACN,MAAM,CAAGH,MAAM,CAACiB,OAAO,CAC/B,CAAC,CAAC,CACFJ,OAAO,CAACC,OAAO,CAACf,WAAW,CAACmB,QAAQ,CAAE,SAACT,KAAK,CAAEC,MAAM,CAAK,CACvDD,KAAK,CAACN,MAAM,CAAGH,MAAM,CAACmB,KAAK,CAC3BV,KAAK,CAACP,KAAK,CAAG,EAAE,CAClB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAIK,GAAQM,SAAQ,CAAKH,UAAU,CAACe,OAAO,CAA/BZ,QAAQ,CAAwB,iBAE/C,cAAeH,WAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}