{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchPizzas } from \"./asyncActions\";\nimport { Status } from \"./types\";\nconst initialState = {\n  items: [],\n  status: Status.LOADING //loading|success|error\n};\n\nconst pizzaSlice = createSlice({\n  name: \"pizza\",\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","fetchPizzas","Status","initialState","items","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["/Users/danielshapiro/Documents/Programming/React/react-pizza/src/redux/pizza/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { fetchPizzas } from \"./asyncActions\";\r\nimport { Pizza, PizzaSliceState, Status } from \"./types\";\r\n\r\n\r\nconst initialState: PizzaSliceState = {\r\n    items: [],\r\n    status: Status.LOADING, //loading|success|error\r\n  };\r\n\r\nconst pizzaSlice = createSlice({\r\n  name: \"pizza\",\r\n  initialState,\r\n  reducers: {\r\n    setItems(state, action: PayloadAction<Pizza[]>) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPizzas.pending, (state, action) => {\r\n      state.status = Status.LOADING;\r\n      state.items = [];\r\n    });\r\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = Status.SUCCESS;\r\n    });\r\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\r\n      state.status = Status.ERROR;\r\n      state.items = [];\r\n    });\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const { setItems } = pizzaSlice.actions;\r\n\r\nexport default pizzaSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAAiCC,MAAM,QAAQ,SAAS;AAGxD,MAAMC,YAA6B,GAAG;EAClCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAEH,MAAM,CAACI,OAAO,CAAE;AAC1B,CAAC;;AAEH,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAC9CD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,WAAW,CAACgB,OAAO,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACN,MAAM,GAAGH,MAAM,CAACI,OAAO;MAC7BK,KAAK,CAACP,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFW,OAAO,CAACC,OAAO,CAACf,WAAW,CAACiB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,MAAM,GAAGH,MAAM,CAACiB,OAAO;IAC/B,CAAC,CAAC;IACFJ,OAAO,CAACC,OAAO,CAACf,WAAW,CAACmB,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACN,MAAM,GAAGH,MAAM,CAACmB,KAAK;MAC3BV,KAAK,CAACP,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAIF,OAAO,MAAM;EAAEM;AAAS,CAAC,GAAGH,UAAU,CAACe,OAAO;AAE9C,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}